{"version":3,"sources":["Layout.tsx","images/back.png","serviceWorker.js","Containers/News/News.tsx","actions/NewsActions.tsx","Containers/Album/Album.tsx","actions/PhotosActions.tsx","Containers/Films/Films.tsx","actions/FilmsActions.tsx","Page.tsx","Containers/Login/Login.tsx","Content.tsx","reducers/photos.tsx","reducers/news.tsx","reducers/films.tsx","reducers/index.tsx","store/configureStore.tsx","index.js"],"names":["iOS","process","browser","test","navigator","userAgent","useStyles","makeStyles","theme","createStyles","root","display","title","flexGrow","drawer","breakpoints","up","width","flexShrink","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","padding","abbBar","backgroundColor","link","textDecoration","color","MainLayout","withRouter","children","classes","useState","mobileOpen","setMobileOpen","handleDrawerToggle","className","position","variant","style","edge","onClick","anchor","open","onClose","onOpen","disableBackdropTransition","disableDiscovery","role","onKeyDown","to","key","button","primary","module","exports","Boolean","window","location","hostname","match","News","props","handleOpenDialog","el","state","setState","handleCloseDialog","prevState","scroll","this","getNews","news","blockNews","length","map","source","id","Math","random","newsItem","src","urlToImage","alt","author","height","newsItemBox","description","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","dividers","DialogContentText","tabIndex","DialogActions","Button","React","Component","Connector","connect","store","newsBlock","dispatch","type","axios","method","url","then","response","payload","data","articles","catch","err","addNewsError","compose","withStyles","flexDirection","flexWrap","justifyContent","margin","border","cursor","Album","getPhotos","photos","blockPictures","blockPicturesItem","medium","IconButton","icon","picturesItemNote","photographer","connector","photosBlock","headers","Authorization","addPhotosError","alignItems","listStyle","bottom","left","background","top","right","Films","loadNextPage","e","page","params","getFilms","films","mainBlock","Typography","align","block","item","name","blockItem","Box","image","itemImg","blockInfo","blockText","gender","status","Pagination","count","onChange","filmsBlock","results","info","pages","borderRadius","textAlign","fontWeight","fontSize","Page","layout","Layout","component","rest","render","Login","onChangeFiled","localStorage","setItem","target","value","onBlurField","Password","errorFieldLogin","errorFieldPassword","handleSubmitForm","history","push","clearData","clear","getItem","back","onSubmit","autoComplete","field","TextField","label","error","onBlur","helperText","textField","btnGroup","btn","LoginWrapp","marginTop","borderImage","borderImageSlice","Content","path","initialState","loading","rootReducer","combineReducers","action","createStore","applyMiddleware","thunk","createMuiTheme","palette","main","dark","contrastText","secondary","typography","fontFamily","join","overrides","zIndex","appBar","responsiveFontSizes","Application","ReactDOM","StrictMode","ThemeProvider","document","getElementById","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.4323a524.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nimport {withRouter, NavLink, RouteComponentProps} from 'react-router-dom';\nimport {IconButton, Toolbar, AppBar, createStyles} from '@material-ui/core/';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {makeStyles} from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport PublicIcon from '@material-ui/icons/Public';\nimport Typography from '@material-ui/core/Typography';\nimport MovieIcon from '@material-ui/icons/Movie';\nimport HomeIcon from '@material-ui/icons/Home';\n\nconst drawerWidth = 240;\nconst iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\nconst useStyles = makeStyles((theme)=> createStyles({\n    root: {\n        display: 'flex',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    abbBar: {\n        backgroundColor: \"#85b6b88f\"\n    },\n    link: {\n        textDecoration: 'none',\n        color: \"black\"\n    }\n}));\n\ninterface OwnProps {\n    title: string\n}\n\ninterface PropsType {\n    children: JSX.Element\n}\n\ntype Props = OwnProps & PropsType & RouteComponentProps;\n\nconst Layout: React.FC<Props> = ({title, children}) => {\n    const classes: any = useStyles();\n\n    const [mobileOpen, setMobileOpen] = useState<boolean>(false);\n\n    const handleDrawerToggle = (): void => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\" className={classes.abbBar}>\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {title}\n                    </Typography>\n                    <span style={{flexGrow: 1}}></span>\n                    <IconButton\n                        color=\"inherit\"\n                        edge=\"end\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <div>\n                <SwipeableDrawer\n                    anchor={'left'}\n                    open={mobileOpen}\n                    onClose={handleDrawerToggle}\n                    onOpen={handleDrawerToggle}\n                    disableBackdropTransition={!iOS}\n                    disableDiscovery={iOS}\n                >\n                    <div\n                        role=\"presentation\"\n                        onClick={handleDrawerToggle}\n                        onKeyDown={handleDrawerToggle}\n                    >\n                        <List>\n                            <NavLink to=\"/news\" key=\"news\" className={classes.link}>\n                                <ListItem button>\n                                    <ListItemIcon><PublicIcon/></ListItemIcon>\n                                    <ListItemText primary=\"News\"/>\n                                </ListItem>\n                            </NavLink>\n                            <NavLink to=\"/album\" key=\"album\" className={classes.link}>\n                                <ListItem button>\n                                    <ListItemIcon><PhotoCameraIcon/></ListItemIcon>\n                                    <ListItemText primary=\"Album\"/>\n                                </ListItem>\n                            </NavLink>\n                            <NavLink to=\"/films\" key=\"films\" className={classes.link}>\n                                <ListItem button>\n                                    <ListItemIcon><MovieIcon/></ListItemIcon>\n                                    <ListItemText primary=\"Films\"/>\n                                </ListItem>\n                            </NavLink>\n                            <NavLink to=\"/\" key=\"Home\" className={classes.link}>\n                                <ListItem button>\n                                    <ListItemIcon><HomeIcon/></ListItemIcon>\n                                    <ListItemText primary=\"Home\"/>\n                                </ListItem>\n                            </NavLink>\n                        </List>\n                    </div>\n                </SwipeableDrawer>\n            </div>\n            <main className={classes.content}>\n                <div className={classes.toolbar}/>\n                {children}\n            </main>\n        </div>\n    );\n}\n\nexport const MainLayout = withRouter(Layout);\n\n","module.exports = __webpack_public_path__ + \"static/media/back.5199c3b0.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport {connect, ConnectedProps} from 'react-redux';\nimport { getNews } from '../../actions/NewsActions';\nimport { withStyles, createStyles, WithStyles } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport {AppRootStore} from \"../../reducers\";\nimport {compose} from \"redux\";\nimport {INews} from \"../../reducers/news\";\n\nconst styles = () => createStyles({\n    blockNews: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        padding:\"0\",\n        margin:0\n        \n    },\n    newsItem: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"300px\",\n        margin: \"10px\",\n        border: \"1px solid #82aa9e36\",\n        backgroundColor: \"#82aa9e36\",\n        cursor: \"pointer\",\n        \"&:hover\": {\n            backgroundColor: \"darkseagreen\"\n        }\n    },\n    newsItemBox:{\n        padding: \"5px 15px\",\n    }\n});\n\ninterface StateProps {\n    open: boolean\n    scroll: \"body\" | \"paper\" | undefined\n    content: string\n}\n\ntype Props = ReduxProps & WithStyles<typeof styles>;\n\nclass News extends React.Component<Props, StateProps> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            open: false,\n            scroll:'paper',\n            content:''\n        }\n    }\n\n    componentDidMount(): void {\n        this.props.getNews();\n    }\n\n    handleOpenDialog =(el: INews):void =>{\n        const {open} = this.state;\n        this.setState({\n            open:!open,\n            content:el.content\n        })\n    }\n\n    handleCloseDialog =():void => {\n        this.setState((prevState)=>({\n            open: !prevState.open\n        }));\n    }\n\n    render(): React.ReactNode {\n        const { news, classes } = this.props;\n        const {open, scroll, content} = this.state;\n\n        return (\n            <ul className={classes.blockNews}>\n                {\n                    news.length > 0 && (news as Array<INews>).map((el: INews) => {\n                        return (news as Array<INews>).map((el: INews) => {\n                            return (\n                                <li key={el.source.id + Math.random()} className={classes.newsItem} onClick={()=>this.handleOpenDialog(el)}>\n                                    <img src={el.urlToImage} alt=\"\" key={el.author} height=\"200px\" />\n                                    <div className={classes.newsItemBox}>\n                                        <h3>{el.author}</h3>\n                                        <p>{el.description}</p>\n                                    </div>\n                                </li>\n                            )\n                        })\n                    })\n                }\n\n                <Dialog\n                    open={open}\n                    onClose={this.handleCloseDialog}\n                    scroll={scroll}\n                    aria-labelledby=\"scroll-dialog-title\"\n                    aria-describedby=\"scroll-dialog-description\"\n                >\n                    <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\n                    <DialogContent dividers={scroll === 'paper'}>\n                        <DialogContentText\n                            id=\"scroll-dialog-description\"\n                            tabIndex={-1}\n                        >\n                            {content && content}\n                        </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                        <Button onClick={this.handleCloseDialog} color=\"primary\">\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </ul>\n        )\n    }\n}\n\nconst Connector = connect((store: AppRootStore)=>({\n    news: store.newsBlock.news\n}),{\n    getNews: getNews\n})\n\ntype ReduxProps = ConnectedProps<typeof Connector>\n\nexport default compose(\n    Connector,\n    withStyles(styles)\n)(News);","import axios from 'axios';\nimport { Dispatch } from \"redux\";\nimport {INews} from \"../reducers/news\";\n\nexport const GET_NEWS_REQUEST = \"GET_NEWS_REQUEST\";\nexport const GET_NEWS_SUCCESS = \"GET_NEWS_SUCCESS\";\nexport const GET_NEWS_FAIL = \"GET_NEWS_FAIL\";\n\nconst addNewsRequest = ():addNewssRequestType => ({\n    type: GET_NEWS_REQUEST,\n});\ntype addNewssRequestType = {\n    type: typeof GET_NEWS_REQUEST\n}\n\nexport const addNewsSuccess = (news: Array<INews>):addNewsSuccessType => ({\n    type: GET_NEWS_SUCCESS,\n    payload: news\n});\ntype addNewsSuccessType = {\n    type: typeof GET_NEWS_SUCCESS\n    payload: Array<INews>\n}\n\nconst addNewsError = (err: string | null): addNewsErrorType => ({\n    type: GET_NEWS_FAIL,\n    payload: { err }\n});\ntype addNewsErrorType = {\n    type: typeof GET_NEWS_FAIL\n    payload: { err: string | null }\n}\n\nexport type NewsActionsType = addNewssRequestType | addNewsSuccessType | addNewsErrorType;\n\nexport const getNews = () => {\n    return (dispatch:Dispatch<NewsActionsType>) => {\n        dispatch(addNewsRequest());\n\n        axios({\n            method: 'get',\n            url: `http://newsapi.org/v2/top-headlines?country=no&apiKey=60ea0e2e8e454d83a839631a483743dc`,\n        })\n            .then(response => {\n                dispatch(addNewsSuccess(response.data.articles))\n            })\n            .catch(err => {\n                dispatch(addNewsError(err))\n            })\n    }\n}\n\n\n\n","import React from 'react';\nimport {connect, ConnectedProps} from 'react-redux';\nimport { getPhotos } from '../../actions/PhotosActions';\nimport { withStyles, createStyles, WithStyles } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport {compose} from \"redux\";\nimport {AppRootStore} from \"../../reducers\";\nimport {IPhotos} from \"../../reducers/photos\";\n\nconst styles = () => createStyles({\n    blockPictures: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        margin:0,\n        padding:0\n    },\n    blockPicturesItem: {\n        listStyle: \"none\",\n        padding: \"10px 20px\",\n        position: \"relative\",\n    },\n    picturesItemNote: {\n        bottom: \"10px\",\n        left: \"20px\",\n        height: \"20px\",\n        padding: \"10px\",\n        color: \"white\",\n        position: \"absolute\",\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\n    },\n    icon: {\n        position: \"absolute\",\n        color: \"white\",\n        top: \"10px\",\n        right: \"20px\"\n    },\n});\n\ntype Props = ReduxProps & WithStyles<typeof styles> ;\n\nclass Album extends React.Component<Props> {\n    componentDidMount():void {\n        this.props.getPhotos();\n    }\n\n    render(): React.ReactNode {\n        const { photos, classes } = this.props;\n\n        return (\n            <div>\n                <ul className={classes.blockPictures}>\n                    {\n                        photos.length && (photos as Array<IPhotos>).map((el:IPhotos) => {\n                            return (\n                                <li key={el.id} className={classes.blockPicturesItem}>\n                                    <img src={el.src.medium} alt=\"\" key={el.id} height=\"200px\" width=\"250px\"/>\n                                    <IconButton className={classes.icon}>\n                                        <StarBorderIcon/>\n                                    </IconButton>\n                                    <span className={classes.picturesItemNote}>{el.photographer}</span>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nconst connector = connect((store:AppRootStore)=>({\n    photos: store.photosBlock.photos,\n}),{\n    getPhotos: getPhotos\n})\n\ntype ReduxProps = ConnectedProps<typeof connector>\n\nexport default compose(\n    connector,\n    withStyles(styles)\n)(Album);\n\n\n\n","import axios from 'axios';\nimport {Dispatch} from \"redux\";\nimport {IPhotos} from \"../reducers/photos\";\n\nexport const GET_PHOTOS_REQUEST = \"GET_PHOTOS_REQUEST\";\nexport const GET_PHOTOS_SUCCESS = \"GET_PHOTOS_SUCCESS\";\nexport const GET_PHOTOS_FAIL = \"GET_PHOTOS_FAIL\";\n\nconst addPhotosRequest = ():addPhotosRequestType => ({\n    type: GET_PHOTOS_REQUEST,\n});\ntype addPhotosRequestType = {type: typeof GET_PHOTOS_REQUEST}\n\nexport const addPhotosSuccess = (photos:Array<IPhotos>):addPhotosSuccessType => ({\n    type: GET_PHOTOS_SUCCESS,\n    payload: photos\n});\ntype addPhotosSuccessType = {\n    type: typeof GET_PHOTOS_SUCCESS\n    payload: Array<IPhotos>\n}\n\nconst addPhotosError = (err: string | null):addPhotosErrorType => ({\n    type: GET_PHOTOS_FAIL,\n    payload: { err }\n});\ntype addPhotosErrorType = {\n    type: typeof GET_PHOTOS_FAIL\n    payload: { err: string | null }\n}\n\nexport type PhotosActionType = addPhotosRequestType | addPhotosSuccessType | addPhotosErrorType\n\nexport const getPhotos = () => {\n    return (dispatch: Dispatch<PhotosActionType>) => {\n        dispatch(addPhotosRequest());\n\n        axios({\n            method: 'get',\n            url: `https://api.pexels.com/v1/search?query=nature&per_page=80\"`,\n            headers: {Authorization: \"563492ad6f9170000100000190b900612c0e41a281be655afc75973d\"}\n        })\n            .then(response => {\n                dispatch(addPhotosSuccess(response.data.photos))\n            })\n            .catch(err => {\n                dispatch(addPhotosError(err))\n            })\n    }\n}\n\n\n","import React from 'react'\r\nimport {Box, Typography, withStyles, createStyles, WithStyles} from \"@material-ui/core\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {AppRootStore} from \"../../reducers\";\r\nimport {getFilms} from \"../../actions/FilmsActions\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst styles = () => createStyles({\r\n    title: {\r\n        color: \"cadetblue\"\r\n    },\r\n    block: {\r\n        display:'flex',\r\n        alignItems:'center',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center'\r\n    },\r\n    blockItem: {\r\n        margin:'15px',\r\n        padding:'0 20px 0 0',\r\n        backgroundColor:'#56d5e62b',\r\n\r\n        width: '400px',\r\n        height:'200px',\r\n        display:'flex',\r\n        justifyContent: 'space-between',\r\n        borderRadius:'15px',\r\n    },\r\n\r\n    itemImg: {\r\n        borderRadius:'15px 0 0 15px'\r\n    },\r\n    blockInfo: {\r\n        padding: '10px 20px',\r\n        textAlign: 'center',\r\n        width: '200px'\r\n    },\r\n    blockText: {\r\n        fontWeight:600,\r\n        fontSize:'18px'\r\n    },\r\n    mainBlock: {\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'center',\r\n        alignItems:'center'\r\n    }\r\n\r\n})\r\n\r\ninterface IFilms {\r\n    created: string\r\n    episode: Array<string>\r\n    gender: string\r\n    id: number\r\n    image: string\r\n    location: {name: string}\r\n    name: string\r\n    origin: {name: string, url: string}\r\n    species: string\r\n    status: string\r\n    type: string\r\n    url: string\r\n}\r\n\r\ntype StateType = {\r\n    page: number\r\n}\r\n\r\ntype Props = ReduxProps & WithStyles<typeof styles>;\r\n\r\nclass Films extends React.Component<Props, StateType>{\r\n    constructor(props:Props) {\r\n        super(props);\r\n        this.state = {\r\n            page: 1,\r\n        }\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const params = {\r\n            page:this.state.page\r\n        }\r\n        this.props.getFilms(params)\r\n    }\r\n\r\n    loadNextPage=(e:React.ChangeEvent<unknown>, page:number)=>{\r\n        this.setState((prevState)=> ({\r\n            page: prevState.page\r\n        }));\r\n        const params = {\r\n            page: page\r\n        }\r\n        this.props.getFilms(params)\r\n    }\r\n\r\n    render(): React.ReactNode  {\r\n        const { classes, films, page } = this.props;\r\n        return (\r\n            <div className={classes.mainBlock}>\r\n                <Typography variant=\"h3\" align=\"center\" className={classes.title}>Some information about films!</Typography>\r\n\r\n                <div className={classes.block}>\r\n                {\r\n                    films.map((item:IFilms)=>{\r\n                        return (\r\n                            <div key={item.name} className={classes.blockItem}>\r\n                                <Box>\r\n                                    <img src={item.image}  className={classes.itemImg} width={\"200px\"} height={\"200px\"} />\r\n                                </Box>\r\n                                <Box className={classes.blockInfo}>\r\n                                    <Typography variant=\"body1\" className={classes.blockText}>{item.gender} - {item.type}</Typography>\r\n                                    <Typography variant=\"body1\" className={classes.blockText}>{item.name}</Typography>\r\n                                    <Typography variant=\"body1\" className={classes.blockText}>{item.status}</Typography>\r\n                                </Box>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n                <Pagination count={page} onChange={this.loadNextPage}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Connector = connect(\r\n    (store:AppRootStore)=>({\r\n        films: store.filmsBlock.films,\r\n        page: store.filmsBlock.page\r\n    }), {\r\n        getFilms: getFilms\r\n    });\r\n\r\ntype ReduxProps = ConnectedProps<typeof Connector>\r\n\r\nexport default compose(\r\n    Connector,\r\n    withStyles(styles)\r\n)(Films)\r\n","import {Dispatch} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const REQUEST_FILMS = 'REQUEST_FILMS';\r\nexport const LOADING_FILMS = 'LOADING_FILMS';\r\nexport const LOADED_FINISH = 'LOADED_FINISH';\r\n\r\nexport const LOADING_PAGE = 'LOADING_PAGE';\r\n\r\nconst requestFilms = ():requestFilmsType => ({\r\n    type: REQUEST_FILMS\r\n})\r\ntype requestFilmsType = {type: typeof REQUEST_FILMS}\r\n\r\nexport const loadingFilms = (films:any):loadingFilmsType => ({\r\n    type: LOADING_FILMS,\r\n    payload: films\r\n})\r\ntype loadingFilmsType = {type: typeof LOADING_FILMS, payload:any}\r\n\r\nconst requestFinished = ():requestFinishedType => ({\r\n    type: LOADED_FINISH,\r\n})\r\ntype requestFinishedType = {type: typeof LOADED_FINISH}\r\n\r\nconst loadingPage = (page:number):loadingPageType => ({\r\n    type: LOADING_PAGE,\r\n    payload: page\r\n})\r\ntype loadingPageType = {type: typeof LOADING_PAGE, payload:number}\r\n\r\nexport type ActionsTypeNews = requestFilmsType | loadingFilmsType | requestFinishedType | loadingPageType;\r\n\r\nexport const getFilms = (params: any) => {\r\n    return (dispatch: Dispatch<ActionsTypeNews>)=> {\r\n        dispatch(requestFilms())\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: `https://rickandmortyapi.com/api/character/?page=${params.page}`,\r\n        })\r\n            .then(response => {\r\n                dispatch(loadingFilms(response.data.results))\r\n                dispatch(loadingPage(response.data.info.pages))\r\n            })\r\n            .catch(err => {\r\n                dispatch(requestFinished())\r\n            })\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport { Route } from 'react-router'\r\nimport {MainLayout} from './Layout'\r\n\r\ninterface Props {\r\n    layout?: React.ComponentType;\r\n    component: any;\r\n    path: string;\r\n    exact?: boolean;\r\n    sensitive?: boolean;\r\n    strict?: boolean;\r\n    title?: any;\r\n}\r\n\r\nexport const Page: React.FC<Props> = ({\r\n    layout: Layout = MainLayout,\r\n    component: Component,\r\n    title,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => (\r\n                title === 'Login' ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Layout title={title}>\r\n                        <Component {...props} />\r\n                    </Layout>\r\n                )\r\n\r\n            )}\r\n        />\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {TextField, withStyles, createStyles, WithStyles} from \"@material-ui/core\";\r\nimport back  from './../../images/back.png';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst styles = () => createStyles({\r\n    root: {\r\n        color: \"cadetblue\",\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        marginTop: '200px',\r\n\r\n        position: 'absolute',\r\n        top: '5%',\r\n        right: '35%'\r\n    },\r\n    field:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        width:'300px',\r\n        padding:'20px 30px 50px 30px',\r\n        border: '10px solid transparent',\r\n        borderImage: ' 10 repeating-linear-gradient(45deg, #A7CECC, #A7CECC 10px, transparent 10px, transparent 20px, #F8463F 20px, #F8463F 30px,transparent 30px, transparent 40px);',\r\n        borderImageSlice: 1,\r\n    },\r\n    textField: {\r\n        marginTop: '10px'\r\n    },\r\n    btn: {\r\n        marginTop: '10px'\r\n    },\r\n    btnGroup: {\r\n        display:'flex',\r\n        justifyContent: 'space-between',\r\n        width: '170px'\r\n    }\r\n})\r\n\r\ninterface IProps {\r\n    match: any,\r\n    location: any,\r\n    history: any\r\n}\r\n\r\ntype StateType = {\r\n    errorFieldLogin: boolean,\r\n    errorFieldPassword: boolean,\r\n    Login: string,\r\n    Password: string,\r\n}\r\n\r\ntype Props = WithStyles<typeof styles> & IProps;\r\n\r\nclass Login extends React.Component<Props, StateType>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            errorFieldLogin: false,\r\n            errorFieldPassword: false,\r\n            Login: localStorage.getItem('Login') || '',\r\n            Password: localStorage.getItem('Password') || '',\r\n        }\r\n    }\r\n\r\n    onChangeFiled=(name:string, e:React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>):void=>{\r\n        localStorage.setItem(name, e.target.value);\r\n\r\n        this.setState({\r\n            [name]: e.target.value,\r\n            [`errorField${name}`]: false,\r\n        } as any)\r\n    }\r\n\r\n    onBlurField=(name:string):void=>{\r\n        const { Login, Password} = this.state;\r\n        if (name === 'Login') {\r\n            let reg = /^([aA-zZ]+)$/i\r\n            if (!reg.test(Login)) {\r\n                this.setState({\r\n                    errorFieldLogin: true\r\n                })\r\n            }\r\n        } else if (name === 'Password') {\r\n            if (Password.length <= 3) {\r\n                this.setState({\r\n                    errorFieldPassword: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmitForm=():void=>{\r\n        const { Login, Password, errorFieldLogin, errorFieldPassword} = this.state;\r\n\r\n        if (!Login.length){\r\n            this.setState({\r\n                errorFieldLogin: true\r\n            })\r\n        } else if (!Password.length) {\r\n            this.setState({\r\n                errorFieldPassword: true\r\n            })\r\n        } else if (!errorFieldLogin && !errorFieldPassword){\r\n            this.props.history.push('/news')\r\n        }\r\n    }\r\n\r\n    clearData=():void=>{\r\n        localStorage.clear();\r\n        this.setState({\r\n            Login:'',\r\n            Password:''\r\n        })\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        const { errorFieldLogin, errorFieldPassword, Login, Password } = this.state;\r\n        const {classes} = this.props\r\n\r\n        return (\r\n            <div className=\"wrapp\">\r\n                <img src={back} width=\"100%\" style={{position:'relative'}}/>\r\n                <form className={classes.root} onSubmit={this.handleSubmitForm} autoComplete=\"off\">\r\n                    <div className={classes.field}>\r\n                        <TextField\r\n                            label=\"Login\"\r\n                            error={errorFieldLogin}\r\n                            onChange={(e)=>this.onChangeFiled(\"Login\", e)}\r\n                            onBlur={(e)=>this.onBlurField(\"Login\")}\r\n                            value={Login}\r\n                            id=\"standard-error\"\r\n                            helperText={errorFieldLogin && \"only english letters\"}\r\n                            className={classes.textField}\r\n                        />\r\n                        <TextField\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            error={errorFieldPassword}\r\n                            value={Password}\r\n                            onChange={(e)=>this.onChangeFiled(\"Password\", e)}\r\n                            onBlur={(e)=>this.onBlurField(\"Password\")}\r\n                            helperText={errorFieldPassword && \"at least 4 characters\"}\r\n                            id=\"standard-error-helper-text\"\r\n                            className={classes.textField}\r\n                        />\r\n                        <div className={classes.btnGroup}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.btn}\r\n                                type=\"submit\"\r\n                            >\r\n                                Log in\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.btn}\r\n                                onClick={this.clearData}\r\n                            >\r\n                                Clear\r\n                            </Button>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst LoginWrapp = withRouter(Login)\r\nexport default withStyles(styles)(LoginWrapp);","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport News from './Containers/News/News';\nimport Album from './Containers/Album/Album';\nimport Films from './Containers/Films/Films';\nimport { Page } from \"./Page\";\nimport Login from \"./Containers/Login/Login\";\n\ninterface Props {\n}\n\nexport const Content: React.FC<Props> = () => (\n    <Switch>\n        <Page path=\"/news\" title=\"Your news\" component={News}/>\n        <Page path=\"/album\" title=\"Your album\" component={Album}/>\n        <Page path=\"/films\" title=\"Your films\" component={Films}/>\n        <Page path=\"/\" title=\"Login\" component={Login}/>\n    </Switch>\n\n);\n\n\n\n","import {GET_PHOTOS_REQUEST, GET_PHOTOS_SUCCESS, GET_PHOTOS_FAIL, PhotosActionType} from '../actions/PhotosActions';\n\n export interface IPhotos {\n    avg_color: string\n    height: number\n    id: number\n    liked: boolean\n    photographer: string\n    photographer_id: number\n    photographer_url: string\n    src: {\n        landscape: string\n        large: string\n        large2x: string\n        medium: string\n        original: string\n        portrait: string\n        small: string\n        tiny: string\n    }\n    url: string\n    width: number\n}\n\ntype PhotosStateType = {\n    photos: Array<IPhotos>\n    loading: boolean\n    error: string | null\n}\n\nconst initialState: PhotosStateType = {\n    photos: [],\n    loading: false,\n    error: null\n}\n\nexport function photosReducer(state = initialState, action:PhotosActionType): PhotosStateType{\n    switch (action.type) {\n\n        case GET_PHOTOS_REQUEST:\n            return { \n                ...state, \n                loading:true\n            }\n\n        case GET_PHOTOS_SUCCESS:\n            return { \n                ...state, \n                loading: false,\n                photos: action.payload\n            }\n\n        case GET_PHOTOS_FAIL:\n            return { \n                ...state, \n                error: action.payload.err, \n                loading: false \n            }\n\n        default:\n            return state\n    }\n}","import {GET_NEWS_REQUEST, GET_NEWS_SUCCESS, GET_NEWS_FAIL, NewsActionsType} from '../actions/NewsActions';\n\nexport interface INews {\n    author: string\n    content: string\n    description: string\n    publishedAt: string\n    source: {\n        id: number\n        name: string\n    }\n    title: string\n    url: string\n    urlToImage: string\n}\n\nexport type NewStateType = {\n    news: Array<INews>\n    loading: boolean\n    error: string | null\n}\n\nconst initialState: NewStateType = {\n    news:[],\n    loading: false,\n    error: null\n}\n\nexport function newsReducer(state = initialState, action: NewsActionsType):NewStateType{\n    switch (action.type) {\n\n        case GET_NEWS_REQUEST:\n            return { \n                ...state, \n                loading:true\n            }\n\n        case GET_NEWS_SUCCESS:\n            return { \n                ...state, \n                loading: false,\n                news: action.payload\n            }\n\n        case GET_NEWS_FAIL:\n            return { \n                ...state, \n                error: action.payload.err, \n                loading: false \n            }\n        default:\n            return state\n    }\n}","import {ActionsTypeNews,\r\n    LOADED_FINISH,\r\n    LOADING_FILMS,\r\n    LOADING_PAGE,\r\n    REQUEST_FILMS,\r\n} from \"../actions/FilmsActions\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    films: [],\r\n    page: 0,\r\n}\r\n\r\ntype initialStateType = typeof initialState\r\n\r\nexport const filmsReduser = (state = initialState, action: ActionsTypeNews):initialStateType => {\r\n    switch (action.type) {\r\n        case REQUEST_FILMS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n        };\r\n\r\n        case LOADING_FILMS:\r\n            return {\r\n                ...state,\r\n                films: action.payload,\r\n                loading: false\r\n            };\r\n\r\n        case LOADING_PAGE:\r\n            return {\r\n                ...state,\r\n                page: action.payload,\r\n                loading: false\r\n            };\r\n\r\n        case LOADED_FINISH:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux';\nimport {photosReducer} from './photos';\nimport {newsReducer} from './news';\nimport {filmsReduser} from \"./films\";\n\nexport const rootReducer = combineReducers({\n    photosBlock: photosReducer,\n    newsBlock: newsReducer,\n    filmsBlock: filmsReduser,\n})\n\nexport type AppRootStore = ReturnType<typeof rootReducer>","import {createStore, applyMiddleware} from \"redux\";\nimport {rootReducer} from '../reducers';\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(rootReducer, {}, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { HashRouter} from 'react-router-dom';\nimport responsiveFontSizes from '@material-ui/core/styles/responsiveFontSizes';\nimport {Content} from './Content';\nimport { Provider } from 'react-redux';\nimport {store} from './store/configureStore';\n\nlet theme = createMuiTheme({\n  root: {\n    flexGrow: 1,\n  },\n  palette: {\n    primary: {\n      main: '#45B0D2',\n      dark: '#004680',\n      contrastText: '#ffffff',\n    },\n    secondary: {\n      main: '#d7efff',\n      dark: '#d4e6f2',\n      contrastText: '#0176B8',\n    },\n  },\n  typography: {\n    fontFamily: [\n      'Arial',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      'Helvetica',\n      'Neue',\n      'Helvetica',\n      'sans-serif'\n    ].join(','),\n  },\n  overrides: {\n  }\n  ,\n})\n  ;\ntheme.zIndex.appBar = theme.zIndex.drawer + 1;\ntheme = responsiveFontSizes(theme);\n\nconst Application = () => {\n  return (\n    <HashRouter>\n      <Content/>\n    </HashRouter>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <Application />\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}